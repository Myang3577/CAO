{"ast":null,"code":"var _jsxFileName = \"/home/eric/javascript-tmp-files/test-express/CAO/api/client/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"; // import rootReducer from \"./reducers/otherReducer\";\n\nimport rootReducer from \"./reducers/rootReducer\";\nimport App from \"./components/App\";\nimport \"./index.css\"; // rootReducer represents all reducers. rootReducer.tsx combines all reducers\n// applyMiddleware(thunk) is used to handle async api calls. don't worry about\n// thunk. just use it\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render(\n/*#__PURE__*/\n// Always provider. Keep it like that\nReact.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/eric/javascript-tmp-files/test-express/CAO/api/client/src/index.tsx"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","thunk","rootReducer","App","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,aAAP,C,CAEA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGL,WAAW,CAACG,WAAD,EAAcF,eAAe,CAACC,KAAD,CAA7B,CAAzB;AAEAJ,QAAQ,CAACQ,MAAT;AAAA;AACE;AACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import rootReducer from \"./reducers/otherReducer\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport App from \"./components/App\";\n\nimport \"./index.css\";\n\n// rootReducer represents all reducers. rootReducer.tsx combines all reducers\n// applyMiddleware(thunk) is used to handle async api calls. don't worry about\n// thunk. just use it\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  // Always provider. Keep it like that\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}