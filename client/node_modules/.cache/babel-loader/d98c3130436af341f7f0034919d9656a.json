{"ast":null,"code":"var _jsxFileName = \"/home/eric/javascript-tmp-files/test-express/CAO/src/components/Home.tsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { searchMovies } from \"../actions/actions\";\nimport { LoadingState } from \"../reducers/otherReducer\";\nimport \"./App.css\";\n/**\n * Home is a component that we want to render. It has been implemented with\n * react hooks here instead of a react class\n */\n\nfunction Home() {\n  // This is the same as creating a state field called count and tying\n  // a setter called setCount to it. useState(0) means the initial state is 0\n  const [count, setCount] = useState(0); // Same as above but for the movie query\n\n  const [movieQuery, setMovieQuery] = useState(\"\"); //\n\n  const movieSearchResult = useSelector(state => state.otherReducer.movieSearchResult);\n  const loading = useSelector(state => state.otherReducer.loading // (state) => state.loading\n  );\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(searchMovies(\"avengers\"));\n  // }, [dispatch]);\n  // useEffect(() => {\n  //   console.log(\"movieSearchResult\");\n  //   console.log(movieSearchResult);\n  // }, [movieSearchResult]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"Count: \", count, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"+1\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    value: movieQuery,\n    onChange: e => setMovieQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), \"\\xA0\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      dispatch(searchMovies(movieQuery));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, loading === LoadingState.LOADING ? \"Loading\" : \"Search Movies asd\"), movieSearchResult.results ? movieSearchResult.results.map((e, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, e.title)) : \"\");\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/eric/javascript-tmp-files/test-express/CAO/src/components/Home.tsx"],"names":["React","useState","useSelector","useDispatch","searchMovies","LoadingState","Home","count","setCount","movieQuery","setMovieQuery","movieSearchResult","state","otherReducer","loading","dispatch","e","target","value","LOADING","results","map","index","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAAuBC,YAAvB,QAA2C,0BAA3C;AACA,OAAO,WAAP;AAEA;;;;;AAIA,SAASC,IAAT,GAAgB;AACd;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC,CAHc,CAKd;;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CANc,CAQd;;AACA,QAAMU,iBAAsB,GAAGT,WAAW,CACvCU,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,iBADU,CAA1C;AAGA,QAAMG,OAAqB,GAAGZ,WAAW,CACtCU,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,OADS,CAEvC;AAFuC,GAAzC;AAIA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CAhBc,CAkBd;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUI,KADV,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AACE,IAAA,KAAK,EAAEE,UADT;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAON,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,uBAUE;AACE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,QAAQ,CAACX,YAAY,CAACK,UAAD,CAAb,CAAR;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGK,OAAO,KAAKT,YAAY,CAACc,OAAzB,GAAmC,SAAnC,GAA+C,mBALlD,CAVF,EAiBGR,iBAAiB,CAACS,OAAlB,GACGT,iBAAiB,CAACS,OAAlB,CAA0BC,GAA1B,CAA8B,CAACL,CAAD,EAASM,KAAT,kBAC5B;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBN,CAAC,CAACO,KAApB,CADF,CADH,GAIG,EArBN,CADF;AAyBD;;AAED,eAAejB,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { searchMovies } from \"../actions/actions\";\nimport { InitialState, LoadingState } from \"../reducers/otherReducer\";\nimport \"./App.css\";\n\n/**\n * Home is a component that we want to render. It has been implemented with\n * react hooks here instead of a react class\n */\nfunction Home() {\n  // This is the same as creating a state field called count and tying\n  // a setter called setCount to it. useState(0) means the initial state is 0\n  const [count, setCount] = useState(0);\n\n  // Same as above but for the movie query\n  const [movieQuery, setMovieQuery] = useState(\"\");\n\n  //\n  const movieSearchResult: any = useSelector<any>(\n    (state) => state.otherReducer.movieSearchResult\n  );\n  const loading: LoadingState = useSelector<any>(\n    (state) => state.otherReducer.loading\n    // (state) => state.loading\n  ) as LoadingState;\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(searchMovies(\"avengers\"));\n  // }, [dispatch]);\n\n  // useEffect(() => {\n  //   console.log(\"movieSearchResult\");\n  //   console.log(movieSearchResult);\n  // }, [movieSearchResult]);\n\n  return (\n    <div>\n      Count: {count}\n      <br />\n      <button onClick={() => setCount(count + 1)}>+1</button>\n      <br />\n      <input\n        value={movieQuery}\n        onChange={(e) => setMovieQuery(e.target.value)}\n      ></input>\n      &nbsp;\n      <button\n        onClick={() => {\n          dispatch(searchMovies(movieQuery));\n        }}\n      >\n        {loading === LoadingState.LOADING ? \"Loading\" : \"Search Movies asd\"}\n      </button>\n      {movieSearchResult.results\n        ? movieSearchResult.results.map((e: any, index: number) => (\n            <div key={index}>{e.title}</div>\n          ))\n        : \"\"}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}